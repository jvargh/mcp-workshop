"use strict";(self.webpackChunkmcp_workshop=self.webpackChunkmcp_workshop||[]).push([[7760],{2593:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"mcp-concepts/more/external","title":"Consuming external servers","description":"Example servers","source":"@site/docs/mcp-concepts/03-more/external.md","sourceDirName":"mcp-concepts/03-more","slug":"/mcp-concepts/more/external","permalink":"/mcp-workshop/docs/mcp-concepts/more/external","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mcp-concepts/03-more/external.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"What else?","permalink":"/mcp-workshop/docs/category/what-else"},"next":{"title":"There\'s more than tools","permalink":"/mcp-workshop/docs/mcp-concepts/more/more"}}');var s=r(4848),o=r(8453);const a={sidebar_position:1},i="Consuming external servers",c={},l=[{value:"Example servers",id:"example-servers",level:2},{value:"External servers",id:"external-servers",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"consuming-external-servers",children:"Consuming external servers"})}),"\n",(0,s.jsx)(n.h2,{id:"example-servers",children:"Example servers"}),"\n",(0,s.jsx)(n.p,{children:"There are many example servers as part of the SDK that you can use to test and experiment with."}),"\n",(0,s.jsx)(n.p,{children:"Here's an example from the SDK showing you how you can wrap a database in a server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";\nimport sqlite3 from "sqlite3";\nimport { promisify } from "util";\nimport { z } from "zod";\n\nconst server = new McpServer({\n  name: "SQLite Explorer",\n  version: "1.0.0"\n});\n\n// Helper to create DB connection\nconst getDb = () => {\n  const db = new sqlite3.Database("database.db");\n  return {\n    all: promisify<string, any[]>(db.all.bind(db)),\n    close: promisify(db.close.bind(db))\n  };\n};\n\nserver.resource(\n  "schema",\n  "schema://main",\n  async (uri) => {\n    const db = getDb();\n    try {\n      const tables = await db.all(\n        "SELECT sql FROM sqlite_master WHERE type=\'table\'"\n      );\n      return {\n        contents: [{\n          uri: uri.href,\n          text: tables.map((t: {sql: string}) => t.sql).join("\\n")\n        }]\n      };\n    } finally {\n      await db.close();\n    }\n  }\n);\n\nserver.tool(\n  "query",\n  { sql: z.string() },\n  async ({ sql }) => {\n    const db = getDb();\n    try {\n      const results = await db.all(sql);\n      return {\n        content: [{\n          type: "text",\n          text: JSON.stringify(results, null, 2)\n        }]\n      };\n    } catch (err: unknown) {\n      const error = err as Error;\n      return {\n        content: [{\n          type: "text",\n          text: `Error: ${error.message}`\n        }],\n        isError: true\n      };\n    } finally {\n      await db.close();\n    }\n  }\n);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Read more ",(0,s.jsx)(n.a,{href:"https://github.com/modelcontextprotocol/typescript-sdk?tab=readme-ov-file#sqlite-explorer",children:"here"})]}),"\n",(0,s.jsx)(n.h2,{id:"external-servers",children:"External servers"}),"\n",(0,s.jsxs)(n.p,{children:["There's many MCP servers built already reading for you to just add them and the way to add them is by adding entries in your ",(0,s.jsx)(n.code,{children:"mcp.json"})," file. Here's some examples of servers you can add:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"filesystem": {\n      "command": "npx",\n      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/path/to/allowed/files"]\n    }\n'})}),"\n",(0,s.jsx)(n.p,{children:"This MCP server allows you to read and write files on your filesystem."}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsx)(n.p,{children:"Be aware that this is operating on your file system. So only grant access to specific folders e.g C:/temp or /tmp. Do not give access to your home directory or any other folder that contains sensitive information."})}),"\n",(0,s.jsx)(n.p,{children:"Another example is GitHub, here you add the following entry:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"github": {\n      "command": "npx",\n      "args": ["-y", "@modelcontextprotocol/server-github"],\n      "env": {\n        "GITHUB_PERSONAL_ACCESS_TOKEN": "<YOUR_TOKEN>"\n      }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For each server you add, some servers may have requirements on how to add them. For example, the GitHub server requires you to add a personal access token and you need Docker installed and running. Learn more here about ",(0,s.jsx)(n.a,{href:"https://github.com/github/github-mcp-server?tab=readme-ov-file#prerequisites",children:"GitHub MCP Sever"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var t=r(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);