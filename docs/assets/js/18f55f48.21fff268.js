"use strict";(self.webpackChunkmcp_workshop=self.webpackChunkmcp_workshop||[]).push([[6326],{4826:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"mcp-concepts/consuming-server/activity-client","title":"Activity: Creating a client","description":"To create a client, we\'ll use a similar set up as with the server. At high level, here\'s what we need to do:","source":"@site/docs/mcp-concepts/01-consuming-server/04-activity-client.md","sourceDirName":"mcp-concepts/01-consuming-server","slug":"/mcp-concepts/consuming-server/activity-client","permalink":"/mcp-workshop/docs/mcp-concepts/consuming-server/activity-client","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mcp-concepts/01-consuming-server/04-activity-client.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Consuming a server with an MCP client","permalink":"/mcp-workshop/docs/mcp-concepts/consuming-server/client"},"next":{"title":"LLM Client","permalink":"/mcp-workshop/docs/mcp-concepts/consuming-server/llm-client"}}');var r=t(4848),l=t(8453),i=t(5537),o=t(9329);const c={sidebar_position:4},a="Activity: Creating a client",d={},h=[{value:"-1- Create a new project",id:"-1--create-a-new-project",level:2},{value:"-2- Install the necessary dependencies",id:"-2--install-the-necessary-dependencies",level:3},{value:"-3- Write the client code",id:"-3--write-the-client-code",level:2},{value:"List tools and call the <code>add</code> tool",id:"list-tools-and-call-the-add-tool",level:3},{value:"-4- Run the client",id:"-4--run-the-client",level:2},{value:"Summary",id:"summary",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"activity-creating-a-client",children:"Activity: Creating a client"})}),"\n",(0,r.jsx)(n.p,{children:"To create a client, we'll use a similar set up as with the server. At high level, here's what we need to do:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"typescript",label:"TypeScript",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a new Node.js project in the ",(0,r.jsx)(n.code,{children:"client"})," folder."]}),"\n",(0,r.jsx)(n.li,{children:"Install the necessary dependencies."}),"\n",(0,r.jsxs)(n.li,{children:["Create a ",(0,r.jsx)(n.code,{children:"src"})," folder and add an ",(0,r.jsx)(n.code,{children:"index.ts"})," file."]}),"\n",(0,r.jsxs)(n.li,{children:["Write the client code to connect to the server and call the ",(0,r.jsx)(n.code,{children:"add"})," tool."]}),"\n"]})}),(0,r.jsx)(o.A,{value:"python",label:"Python",default:!0,children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Create a new project by creating a new folder (or reuse the existing one)."}),"\n",(0,r.jsx)(n.li,{children:"Install the necessary dependencies."}),"\n",(0,r.jsxs)(n.li,{children:["Add a ",(0,r.jsx)(n.code,{children:"server.py"})," and ",(0,r.jsx)(n.code,{children:"client.py"})," file."]}),"\n",(0,r.jsxs)(n.li,{children:["Write the client code to connect to the server and call the ",(0,r.jsx)(n.code,{children:"add"})," tool."]}),"\n"]})})]}),"\n",(0,r.jsx)(n.h2,{id:"-1--create-a-new-project",children:"-1- Create a new project"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"typescript",label:"TypeScript",children:[(0,r.jsx)(n.p,{children:"This is straightforward. We will create a new Node.js project and install the necessary dependencies. The project structure will look like this:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"|- client\n    |- src\n    |   |- index.ts\n    |- package.json\n    |- tsconfig.json\n"})}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"client"})," folder in the root directory of your project."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir client\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Initialize a new Node.js project in the ",(0,r.jsx)(n.code,{children:"client"})," folder:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd client\nnpm init -y\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Update the ",(0,r.jsx)(n.code,{children:"package.json"})," file to include the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "client",\n  "version": "1.0.0",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n    "build": "tsc && node ./build/index.js"\n  },\n  "keywords": [],\n  "author": "",\n  "license": "ISC",\n  "dependencies": {\n    "@modelcontextprotocol/sdk": "^1.8.0"\n  },\n  "devDependencies": {\n    "@types/node": "^22.13.17",\n    "typescript": "^5.8.2"\n  },\n  "description": ""\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," file in the ",(0,r.jsx)(n.code,{children:"client"})," folder with the following content:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n "compilerOptions": {\n   "target": "ES2022",\n   "module": "Node16",\n   "moduleResolution": "Node16",\n   "outDir": "./build",\n   "rootDir": "./src",\n   "strict": true,\n   "esModuleInterop": true,\n   "skipLibCheck": true,\n   "forceConsistentCasingInFileNames": true\n },\n "include": ["src/**/*"],\n "exclude": ["node_modules"]\n}\n'})}),"\n"]}),"\n"]})]}),(0,r.jsxs)(o.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"--| src\n----| server.py\n----| client.py\n\n"})}),(0,r.jsxs)(n.p,{children:["You can use the following for ",(0,r.jsx)(n.code,{children:"server.py"}),":"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# server.py\nfrom mcp.server.fastmcp import FastMCP\n\n# Create an MCP server\nmcp = FastMCP("Demo")\n\n# Add an addition tool\n@mcp.tool()\ndef add(a: int, b: int) -> int:\n    """Add two numbers"""\n    return a + b\n\n\n# Add a dynamic greeting resource\n@mcp.resource("greeting://{name}")\ndef get_greeting(name: str) -> str:\n    """Get a personalized greeting"""\n    return f"Hello, {name}!"\n'})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"-2--install-the-necessary-dependencies",children:"-2- Install the necessary dependencies"}),"\n",(0,r.jsx)(n.p,{children:"We need to install the necessary dependencies for the client."}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"typescript",label:"TypeScript",children:[(0,r.jsxs)(n.p,{children:["The main dependency is the ",(0,r.jsx)(n.code,{children:"@modelcontextprotocol/sdk"})," package, which provides the client SDK for interacting with the server. Also, we need ",(0,r.jsx)(n.code,{children:"zod"})," for validation."]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install the necessary dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install @modelcontextprotocol/sdk zod\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"src"})," folder in the ",(0,r.jsx)(n.code,{children:"client"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir src\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a file named ",(0,r.jsx)(n.code,{children:"index.ts"})," in the ",(0,r.jsx)(n.code,{children:"src"})," folder:"]}),"\n"]}),"\n"]})]}),(0,r.jsx)(o.A,{value:"python",label:"Python",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'pip install "mcp[cli]"\n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"-3--write-the-client-code",children:"-3- Write the client code"}),"\n",(0,r.jsxs)(n.p,{children:["Now that we have the project set up, let's write the client code to connect to the server and call the ",(0,r.jsx)(n.code,{children:"add"})," tool."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(o.A,{value:"typescript",label:"TypeScript",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add the following code to ",(0,r.jsx)(n.code,{children:"index.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:' import { Client } from "@modelcontextprotocol/sdk/client/index.js";\n import { StdioClientTransport } from "@modelcontextprotocol/sdk/client/stdio.js";\n \n async function main() {\n\n     const transport = new StdioClientTransport({\n         command: "node",\n         args: ["../build/index.js"]\n     });\n \n     const client = new Client(\n     {\n         name: "example-client",\n         version: "1.0.0"\n     },\n     {\n         capabilities: {\n         prompts: {},\n         resources: {},\n         tools: {}\n         }\n     }\n    );\n \n    await client.connect(transport);\n\nmain().catch((error) => {\n  console.error("Fatal error: ", error);\n  process.exit(1);\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"In the preceding code:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"Client"})," class is imported from the ",(0,r.jsx)(n.code,{children:"@modelcontextprotocol/sdk/client/index.js"})," module."]}),"\n",(0,r.jsxs)(n.li,{children:["An instance of ",(0,r.jsx)(n.code,{children:"StdioClientTransport"})," is created, which will be used to communicate with the server."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"Client"})," instance is created with a name and version, and an empty capabilities object. We will add prompts, resources, and tools to the capabilities object as needed."]}),"\n",(0,r.jsxs)(n.li,{children:["A connection to the server is established using the ",(0,r.jsx)(n.code,{children:"connect"})," method of the ",(0,r.jsx)(n.code,{children:"Client"})," instance, passing in the transport instance."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"At this point, we're not doing anything with the client yet. To interact with the server, we need to implement the logic for sending requests for prompts, resources, and tools. This will be done in the next steps."}),"\n"]}),"\n"]})}),(0,r.jsxs)(o.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from mcp import ClientSession, StdioServerParameters, types\nfrom mcp.client.stdio import stdio_client\n\n# Create server parameters for stdio connection\nserver_params = StdioServerParameters(\n    command="mcp",  # Executable\n    args=["run", "server.py"],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n\nasync def run():\n    async with stdio_client(server_params) as (read, write):\n        async with ClientSession(\n            read, write\n        ) as session:\n            # Initialize the connection\n            await session.initialize()\n\n\nif __name__ == "__main__":\n    import asyncio\n\n    asyncio.run(run())\n'})}),(0,r.jsx)(n.p,{children:"In the preceding code we've:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Created a client instance that also initialized the client-server communication."}),"\n",(0,r.jsxs)(n.li,{children:["Started a server instance with ",(0,r.jsx)(n.code,{children:"mcp run server.py"}),"."]}),"\n"]}),(0,r.jsx)(n.p,{children:"We're now ready to add features."})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"list-tools-and-call-the-add-tool",children:["List tools and call the ",(0,r.jsx)(n.code,{children:"add"})," tool"]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"typescript",label:"TypeScript",children:[(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add the following code to the ",(0,r.jsx)(n.code,{children:"main"})," function to query the server for its tools:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'console.log("TOOLS");\nconst tools = await client.listTools();\ntools.tools.forEach((tool) => {\n     console.log("Tool: ", tool.name);\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"In the preceding code:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"listTools"})," method of the ",(0,r.jsx)(n.code,{children:"Client"})," instance is called to retrieve the list of available tools from the server."]}),"\n",(0,r.jsx)(n.li,{children:"Thereafter the tools are printed to the console."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Let's invoke the ",(0,r.jsx)(n.code,{children:"add"})," tool we created in the server. Add the following code to the ",(0,r.jsx)(n.code,{children:"main"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Call a tool\nconsole.log("CALL TOOL");\n const result = await client.callTool({\n     name: "add",\n     arguments: {\n         a: 2,\n         b: 2\n     }\n });\n\nconsole.log("\\tResult: ", result);\n'})}),"\n",(0,r.jsx)(n.p,{children:"In the preceding code:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"callTool"})," method of the ",(0,r.jsx)(n.code,{children:"Client"})," instance is called to invoke the ",(0,r.jsx)(n.code,{children:"add"})," tool on the server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"callTool"})," takes an object with the tool name and arguments as parameters."]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(n.p,{children:"Your code so far should look like this:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Client } from "@modelcontextprotocol/sdk/client/index.js";\nimport { StdioClientTransport } from "@modelcontextprotocol/sdk/client/stdio.js";\n\nasync function main() {\n\n    const transport = new StdioClientTransport({\n        command: "node",\n        args: ["../build/index.js"]\n    });\n\n    const client = new Client(\n    {\n        name: "example-client",\n        version: "1.0.0"\n    },\n    {\n        capabilities: {\n        prompts: {},\n        resources: {},\n        tools: {}\n        }\n    }\n    );\n\n    await client.connect(transport);\n\n    console.log("TOOLS");\n    const tools = await client.listTools();\n    tools.tools.forEach((tool) => {\n        console.log("Tool: ", tool.name);\n    });\n\n    // Call a tool\n    console.log("CALL TOOL");\n    const result = await client.callTool({\n        name: "add",\n        arguments: {\n            a: 2,\n            b: 2\n        }\n    });\n\n    console.log("\\tResult: ", result);\n}\n\nmain().catch((error) => {\n    console.error("Fatal error: ", error);\n    process.exit(1);\n});\n'})})]}),(0,r.jsxs)(o.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from mcp import ClientSession, StdioServerParameters, types\nfrom mcp.client.stdio import stdio_client\n\n# Create server parameters for stdio connection\nserver_params = StdioServerParameters(\n    command="mcp",  # Executable\n    args=["run", "server.py"],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n\nasync def run():\n    async with stdio_client(server_params) as (read, write):\n        async with ClientSession(\n            read, write\n        ) as session:\n            # Initialize the connection\n            await session.initialize()\n\n            # List available resources\n            resources = await session.list_resources()\n            print("LISTING RESOURCES")\n            for resource in resources:\n                print("Resource: ", resource)\n\n            # List available tools\n            tools = await session.list_tools()\n            print("LISTING TOOLS")\n            for tool in tools.tools:\n                print("Tool: ", tool.name)\n\n            # Read a resource\n            print("READING RESOURCE")\n            content, mime_type = await session.read_resource("greeting://hello")\n\n            # Call a tool\n            print("CALL TOOL")\n            result = await session.call_tool("add", arguments={"a": 1, "b": 7})\n            print(result.content)\n\n\nif __name__ == "__main__":\n    import asyncio\n\n    asyncio.run(run())\n'})}),(0,r.jsx)(n.p,{children:"Now we've added all the features we need so we can:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"List resources and read resources."}),"\n",(0,r.jsx)(n.li,{children:"List and call tools."}),"\n"]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"-4--run-the-client",children:"-4- Run the client"}),"\n",(0,r.jsx)(n.p,{children:"To run the client type the following command in the terminal (make sure you stand in the client directory):"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"typescript",label:"TypeScript",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npm run build\n"})}),(0,r.jsx)(n.p,{children:"You should see the following output:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"TOOLS\nTool:  add\nCALL TOOL\n    Result:  { content: [ { type: 'text', text: '4' } ] }\n"})})]}),(0,r.jsxs)(o.A,{value:"python",label:"Python",default:!0,children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"python client.py\n"})}),(0,r.jsx)(n.p,{children:"You should see the following output:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"LISTING RESOURCES\nResource:  ('meta', None)\nResource:  ('nextCursor', None)\nResource:  ('resources', [])\n                    INFO     Processing request of type ListToolsRequest                                       server.py:625\nLISTING TOOLS\nTool:  add\nREADING RESOURCE\n                    INFO     Processing request of type ReadResourceRequest                                    server.py:625\nCALL TOOL\n                    INFO     Processing request of type CallToolRequest                                        server.py:625\n[TextContent(type='text', text='8', annotations=None, meta=None)]\n"})})]})]}),"\n",(0,r.jsx)(n.p,{children:"In our next activity, let's learn how we can add a large language model (LLM) to our client. This will make it possible for the client to negotiate with the server. Why this is useflu is that you can now show an NLP, Natural Language Processing user interface to the user, and the user can interact using natural language prompts."}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:["You've built a client capable of communicating with an MCP Server. The client can list tools and call the ",(0,r.jsx)(n.code,{children:"add"})," tool. Either run this client from your project or clone the repository below to see a working solution:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/softchris/mcp-workshop.git\ncd tutorial-mcp\n"})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(6540),r=t(4164),l=t(5627),i=t(6347),o=t(372),c=t(604),a=t(1861),d=t(8749);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,a.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(l),(0,s.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=u(e),[i,c]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:l}))),[a,h]=m({queryString:t,groupId:r}),[x,j]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,d.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),g=(()=>{const e=a??x;return p({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{g&&c(g)}),[g]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),j(e)}),[h,j,l]),tabValues:l}}var j=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function v(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=o[t].value;r!==s&&(a(n),i(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:d,...l,className:(0,r.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:l}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===l));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function b(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,f.jsx)(v,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function w(e){const n=(0,j.A)();return(0,f.jsx)(b,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const r={},l=s.createContext(r);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const r={tabItem:"tabItem_Ymn6"};var l=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,i),hidden:t,children:n})}}}]);